<?xml version="1.0"?>
<project name="PowerGridLoader" default="jar" basedir=".">

    <!-- 
      Ant build script for the PowerGrid client loader.
      
      This build script builds the Java client loader, which
      is responsible for downloading and starting the RS client.
      
      The following Ant targets are available:
        - clean:   Cleans the project's build files.
        - makedir: Creates the directory structure.
        - compile: Compiles all Java files
        - docs:    Compiles all Javadoc
        - jar:     Packages the compiled files into a jar (default)
        - run:     Runs the PowerGridLoader
      
      
    -->
  
    <!-- version checks (just to make sure there are no unexplainable errors during build) -->
    <fail message="This project requires at least Ant version 1.8.0">
        <condition>
            <not>
                <antversion atleast="1.8.0" /> 
            </not>
        </condition>
    </fail>
    <fail message="This project requires at Java 8.">
        <condition>
            <not>
                <equals arg1="${ant.java.version}" arg2="1.8" />
            </not>
        </condition>
    </fail>

    <property name="src.dir"     location="src" />
    <property name="build.dir"   location="bin" />
    <property name="dist.dir"    location="../dist" />
    <property name="docs.dir"    location="../doc/loader" />

    <!-- Removes the existing build files. -->
    <!-- Note: The dist directory is shared with the C++ project, so we don't delete it -->
    <!--       (Otherwise the C++ project may be missing files in the dist directory).  -->
    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${docs.dir}" />
    </target>

    <!-- Creates the directory structure -->
    <target name="makedir">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${dist.dir}" />
        <mkdir dir="${docs.dir}" />
    </target>

    <!-- Builds the project -->
    <target name="compile" depends="makedir">
        <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false" />
    </target>

    <!-- Generates Javadoc documentation -->
    <target name="docs" depends="compile">
        <javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.java" />
            </fileset>
        </javadoc>
    </target>

    <!-- Generates the jar file from the compiled files (default target) -->
    <target name="jar" depends="compile">
        <jar destfile="${dist.dir}/PowerGridLoader.jar">
            <!-- Include all compiled files, and include all non-java source files.-->
            <!-- This ensures that resources included in ${src.dir} end up in the jar.-->
            <fileset dir="${build.dir}">
                <include name="**" />
            </fileset>
            <fileset dir="${src.dir}">
                <exclude name="**/*.java" />
            </fileset>
            <manifest>
                <attribute name="Main-Class"    value="net.pgrid.loader.PowerGrid" />
                <attribute name="Agent-Class"   value="net.pgrid.loader.Agent" />
                <attribute name="Premain-Class" value="net.pgrid.loader.Agent" />
            </manifest>
        </jar>
    </target>

    <!-- Runs the PowerGrid loader -->
    <target name="run" depends="jar">
        <java dir="${dist.dir}" jar="${dist.dir}/PowerGridLoader.jar" fork="true">
            <classpath>
                <pathelement location="${dist.dir}/PowerGridLoader.jar" />
                <pathelement path="${java.class.path}" />
            </classpath>
            <jvmarg value="-javaagent:${dist.dir}/PowerGridLoader.jar" />
        </java>
    </target>
    
    <!-- Runs the native client. -->
    <!-- Caution: This task depends on a working, compatible native client build. -->
    <target name="run-native" depends="jar">
        <exec dir="${dist.dir}" executable="${dist.dir}/PowerGrid" />
    </target>
  
</project>
